const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

// In-memory storage for products and subscriptions
const products = new Map();
const subscriptions = new Map();

app.use(bodyParser.json());

// API to create a product
app.post('/products', (req, res) => {
  const { productId, productName } = req.body;
  products.set(productId, { name: productName, updates: [] });
  res.status(201).send(`Product '${productName}' created with ID ${productId}`);
});

// API to purchase a product
app.post('/purchase', (req, res) => {
  const { productId, farmerId } = req.body;
  if (products.has(productId)) {
    const product = products.get(productId);
    const notification = `Product '${product.name}' purchased by Farmer ${farmerId}`;
    products.get(productId).updates.push(notification);
    
    if (subscriptions.has(farmerId)) {
      const subscriber = subscriptions.get(farmerId);
      subscriber(notification);
    }
    
    res.status(200).send(notification);
  } else {
    res.status(404).send('Product not found');
  }
});

// API to subscribe to product updates
app.post('/subscribe', (req, res) => {
  const { farmerId, callbackUrl } = req.body;
  subscriptions.set(farmerId, (notification) => {
    // In a real system, you would send the notification to the farmer using callbackUrl or other means
    console.log(`Notification sent to Farmer ${farmerId}: ${notification}`);
  });
  res.status(201).send(`Subscribed to updates for Farmer ${farmerId}`);
});

app.listen(port, () => {
  console.log(`Notification system is running on http://localhost:${port}`);
});
